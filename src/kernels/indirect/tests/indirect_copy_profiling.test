#define INDIRECT_COPY_DRIVER(SHFSZ, ILP, IDX_PATTERN) indirect_copy_ ## SHFSZ ## _ ## ILP ## _ ## IDX_PATTERN ## _driver

#define INDIRECT_COPY(SHFSZ, ILP, IDX_PATTERN) { MicrobenchmarkDriver<IndirectCopyContext<vt, it, SHFSZ, ILP, IDX_PATTERN>> \
      INDIRECT_COPY_DRIVER(SHFSZ, ILP, IDX_PATTERN)(N, bs_vec, output_dir+ XSTRINGIFY( INDIRECT_COPY_DRIVER(SHFSZ, ILP, IDX_PATTERN) ) ".csv", &dev_ctx, span_occupancies); \
    if (!INDIRECT_COPY_DRIVER(SHFSZ, ILP, IDX_PATTERN).check_kernels()) {return -1;}  \
    total_runs += INDIRECT_COPY_DRIVER(SHFSZ, ILP, IDX_PATTERN).kernel_checks; }

    INDIRECT_COPY(8192, 4, UNCOALESCED_SHUFFLESZ);                    // 24-28
    INDIRECT_COPY(8192, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);  // 29-33

    span_occupancies = false;

    // INDIRECT_COPY(1024, 1, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(1024, 1, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);
    // INDIRECT_COPY(1024, 2, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(1024, 2, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);
    INDIRECT_COPY(1024, 4, UNCOALESCED_SHUFFLESZ);                    // 34
    INDIRECT_COPY(1024, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);  // 35
    // INDIRECT_COPY(1024, 8, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(1024, 8, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);

    INDIRECT_COPY(2048, 4, UNCOALESCED_SHUFFLESZ);                    // 36
    INDIRECT_COPY(2048, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);  // 37

    INDIRECT_COPY(4096, 4, UNCOALESCED_SHUFFLESZ);                    // 38
    INDIRECT_COPY(4096, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);  // 39


    INDIRECT_COPY(8192, 1, UNCOALESCED_SHUFFLESZ);                    // 40
    INDIRECT_COPY(8192, 1, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);  // 41 
    INDIRECT_COPY(8192, 2, UNCOALESCED_SHUFFLESZ);                    // 42
    INDIRECT_COPY(8192, 2, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);  // 43
    // INDIRECT_COPY(8192, 4, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(8192, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);
    INDIRECT_COPY(8192, 8, UNCOALESCED_SHUFFLESZ);                    // 44
    INDIRECT_COPY(8192, 8, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);  // 45

    // INDIRECT_COPY(16384, 4, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(16384, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);

    INDIRECT_COPY(32768, 4, UNCOALESCED_SHUFFLESZ);                   // 46
    INDIRECT_COPY(32768, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS); // 47

    // INDIRECT_COPY(65536, 1, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(65536, 1, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);
    // INDIRECT_COPY(65536, 2, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(65536, 2, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);
    INDIRECT_COPY(65536, 4, UNCOALESCED_SHUFFLESZ);                   // 48
    INDIRECT_COPY(65536, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS); // 49
    // INDIRECT_COPY(65536, 8, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(65536, 8, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);

    INDIRECT_COPY(131072, 4, UNCOALESCED_SHUFFLESZ);                  // 50
    INDIRECT_COPY(131072, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);// 51

    // INDIRECT_COPY(262144, 1, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(262144, 1, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);
    // INDIRECT_COPY(262144, 2, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(262144, 2, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);
    INDIRECT_COPY(262144, 4, UNCOALESCED_SHUFFLESZ);                  // 52
    INDIRECT_COPY(262144, 4, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);// 53
    // INDIRECT_COPY(262144, 8, UNCOALESCED_SHUFFLESZ);
    // INDIRECT_COPY(262144, 8, UNCOALESCED_SHUFFLESZ_NO_BANK_CONFLICTS);

    span_occupancies = true;
